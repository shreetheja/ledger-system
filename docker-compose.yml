
services:
  postgres:
    image: postgres:15
    container_name: ledger_postgres
    restart: always
    environment:
      POSTGRES_USER: ledger_user
      POSTGRES_PASSWORD: ledger_pass
      POSTGRES_DB: ledger_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./cmd/init.sql:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: mongo:6
    container_name: ledger_mongo
    restart: always
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - ./cmd/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

  kafka:
    image: bitnami/kafka:latest
    container_name: ledger_kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@ledger_kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_KRAFT_CLUSTER_ID: kraft-cluster-1234
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  pgdata:
  mongodata:
  kafka_data:
